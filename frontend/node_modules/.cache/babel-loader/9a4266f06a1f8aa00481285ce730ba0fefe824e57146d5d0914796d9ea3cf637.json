{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laksh\\\\Downloads\\\\ffl\\\\smart-dynamic-pricing-fixed\\\\frontend\\\\src\\\\components\\\\CustomerSegmentPie.tsx\";\n// src/components/CustomerSegmentPie.tsx\n\nimport React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\n\n// register the pie/doughnut elements\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nconst DEFAULT_SEGMENTS = [{\n  name: 'Price Sensitive',\n  percentage: 35,\n  color: '#FF6384'\n}, {\n  name: 'Quality Focused',\n  percentage: 25,\n  color: '#36A2EB'\n}, {\n  name: 'Brand Loyal',\n  percentage: 20,\n  color: '#FFCE56'\n}, {\n  name: 'Convenience Seekers',\n  percentage: 15,\n  color: '#4BC0C0'\n}, {\n  name: 'Luxury Buyers',\n  percentage: 5,\n  color: '#9966FF'\n}];\nconst CustomerSegmentPie = ({\n  data\n}) => {\n  // validate incoming data\n  const hasValidData = Array.isArray(data) && data.length > 0 && data.every(s => typeof s.percentage === 'number');\n  const segments = hasValidData ? data : DEFAULT_SEGMENTS;\n\n  // build chart.js data\n  const labels = segments.map(s => s.name);\n  const values = segments.map(s => s.percentage);\n  const backgroundColor = segments.map((s, i) => {\n    var _ref, _s$color;\n    return (_ref = (_s$color = s.color) !== null && _s$color !== void 0 ? _s$color : ChartJS.defaults.color) !== null && _ref !== void 0 ? _ref : [`#${(Math.random() * 0xffffff << 0).toString(16).padStart(6, '0')}`][0];\n  });\n  const chartData = {\n    labels,\n    datasets: [{\n      data: values,\n      backgroundColor,\n      borderColor: '#fff',\n      borderWidth: 2\n    }]\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'right',\n        labels: {\n          boxWidth: 12,\n          padding: 16,\n          font: {\n            size: 12\n          }\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: ctx => {\n            const pct = ctx.parsed;\n            return `${ctx.label}: ${pct.toFixed(1)}%`;\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-64 w-full bg-white rounded-xl shadow-sm p-4\",\n    children: /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_c = CustomerSegmentPie;\nexport default CustomerSegmentPie;\nvar _c;\n$RefreshReg$(_c, \"CustomerSegmentPie\");","map":{"version":3,"names":["React","Chart","ChartJS","ArcElement","Tooltip","Legend","Doughnut","jsxDEV","_jsxDEV","register","DEFAULT_SEGMENTS","name","percentage","color","CustomerSegmentPie","data","hasValidData","Array","isArray","length","every","s","segments","labels","map","values","backgroundColor","i","_ref","_s$color","defaults","Math","random","toString","padStart","chartData","datasets","borderColor","borderWidth","options","responsive","maintainAspectRatio","plugins","legend","position","boxWidth","padding","font","size","tooltip","callbacks","label","ctx","pct","parsed","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/laksh/Downloads/ffl/smart-dynamic-pricing-fixed/frontend/src/components/CustomerSegmentPie.tsx"],"sourcesContent":["// src/components/CustomerSegmentPie.tsx\n\nimport React from 'react';\nimport {\n  Chart as ChartJS,\n  ArcElement,\n  Tooltip,\n  Legend,\n  ChartOptions,\n} from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\n\n// register the pie/doughnut elements\nChartJS.register(ArcElement, Tooltip, Legend);\n\ninterface Segment {\n  name: string;\n  percentage: number;\n  color?: string;\n}\n\ninterface CustomerSegmentPieProps {\n  data?: Segment[];\n}\n\nconst DEFAULT_SEGMENTS: Segment[] = [\n  { name: 'Price Sensitive', percentage: 35, color: '#FF6384' },\n  { name: 'Quality Focused', percentage: 25, color: '#36A2EB' },\n  { name: 'Brand Loyal', percentage: 20, color: '#FFCE56' },\n  { name: 'Convenience Seekers', percentage: 15, color: '#4BC0C0' },\n  { name: 'Luxury Buyers', percentage: 5, color: '#9966FF' },\n];\n\nconst CustomerSegmentPie: React.FC<CustomerSegmentPieProps> = ({ data }) => {\n  // validate incoming data\n  const hasValidData =\n    Array.isArray(data) &&\n    data.length > 0 &&\n    data.every((s) => typeof s.percentage === 'number');\n\n  const segments = hasValidData ? data! : DEFAULT_SEGMENTS;\n\n  // build chart.js data\n  const labels = segments.map((s) => s.name);\n  const values = segments.map((s) => s.percentage);\n  const backgroundColor = segments.map(\n    (s, i) => s.color ?? ChartJS.defaults.color ?? [`#${((Math.random() * 0xffffff) << 0).toString(16).padStart(6, '0')}`][0]\n  );\n\n  const chartData = {\n    labels,\n    datasets: [\n      {\n        data: values,\n        backgroundColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n      },\n    ],\n  };\n\n  const options: ChartOptions<'doughnut'> = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'right',\n        labels: {\n          boxWidth: 12,\n          padding: 16,\n          font: { size: 12 },\n        },\n      },\n      tooltip: {\n        callbacks: {\n          label: (ctx) => {\n            const pct = ctx.parsed;\n            return `${ctx.label}: ${pct.toFixed(1)}%`;\n          },\n        },\n      },\n    },\n  };\n\n  return (\n    <div className=\"h-64 w-full bg-white rounded-xl shadow-sm p-4\">\n      <Doughnut data={chartData} options={options} />\n    </div>\n  );\n};\n\nexport default CustomerSegmentPie;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}