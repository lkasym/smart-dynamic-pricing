{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laksh\\\\Downloads\\\\ffl\\\\smart-dynamic-pricing-fixed\\\\frontend\\\\src\\\\pages\\\\Dashboard.tsx\",\n  _s = $RefreshSig$();\n// src/pages/Dashboard.tsx\nimport React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport Card from '../components/Card';\nimport StatCard from '../components/StatCard';\nimport RevenueVsBaselineChart from '../components/RevenueVsBaselineChart';\nimport PriceDemandRevenueChart from '../components/PriceDemandRevenueChart';\nimport CustomerSegmentPie from '../components/CustomerSegmentPie';\nimport ProductPerformanceChart from '../components/ProductPerformanceChart';\nimport TimePricingChart from '../components/TimePricingChart';\nimport CustomerRetentionChart from '../components/CustomerRetentionChart';\nimport PriceSensitivityHeatmap from '../components/PriceSensitivityHeatmap';\nimport Button from '../components/Button';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport apiClient from '../api/apiClient';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  // State\n  const [products, setProducts] = useState([]);\n  const [segments, setSegments] = useState([]);\n  const [pdData, setPdData] = useState([]);\n  const [timeData, setTimeData] = useState({\n    timeSlots: [],\n    prices: []\n  });\n  const [trainingStatus, setTrainingStatus] = useState({\n    isTraining: false,\n    currentEpisode: 0,\n    totalEpisodes: 0\n  });\n  const [trainingResults, setTrainingResults] = useState({\n    finalReward: 0,\n    avgLast10: 0,\n    improvementOverBaseline: 0,\n    rewardHistory: [],\n    baselineHistory: []\n  });\n  const [episodes, setEpisodes] = useState(100);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Helper to sanitize training results\n  const sanitizeResults = raw => ({\n    finalReward: Number(raw === null || raw === void 0 ? void 0 : raw.finalReward) || 0,\n    avgLast10: Number(raw === null || raw === void 0 ? void 0 : raw.avgLast10) || 0,\n    improvementOverBaseline: Number(raw === null || raw === void 0 ? void 0 : raw.improvementOverBaseline) || 0,\n    rewardHistory: Array.isArray(raw === null || raw === void 0 ? void 0 : raw.rewardHistory) ? raw.rewardHistory.map(v => Number(v) || 0) : [],\n    baselineHistory: Array.isArray(raw === null || raw === void 0 ? void 0 : raw.baselineHistory) ? raw.baselineHistory.map(v => Number(v) || 0) : []\n  });\n\n  // Load everything once\n  useEffect(() => {\n    let poll;\n    const loadAll = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const [prodsRaw, segRaw, pdRaw, tpRaw, statusRaw, resultsRaw] = await Promise.all([apiClient.getProducts(), apiClient.getCustomerSegments(), apiClient.getPriceDemandData(), apiClient.getTimePricingData(), apiClient.getTrainingStatus(), apiClient.getTrainingResults()]);\n\n        // Products\n        setProducts(prodsRaw);\n\n        // Customer segments → pie\n        const pie = segRaw.map(s => ({\n          name: s.name,\n          percentage: typeof s.size === 'number' ? s.size * 100 : 0\n        }));\n        setSegments(pie);\n\n        // Price–Demand–Revenue for first product\n        const pdList = pdRaw;\n        if (pdList.length > 0) {\n          const first = pdList[0];\n          const points = first.pricePoints.map((p, i) => {\n            var _first$demand$i, _first$revenue$i;\n            return {\n              price: p,\n              demand: (_first$demand$i = first.demand[i]) !== null && _first$demand$i !== void 0 ? _first$demand$i : 0,\n              revenue: (_first$revenue$i = first.revenue[i]) !== null && _first$revenue$i !== void 0 ? _first$revenue$i : 0\n            };\n          });\n          setPdData(points);\n        } else {\n          setPdData([]);\n        }\n\n        // Time-based pricing\n        const tp = tpRaw;\n        setTimeData({\n          timeSlots: tp.timeOfDay,\n          prices: tp.priceMultipliers\n        });\n\n        // Training status & results\n        setTrainingStatus(statusRaw);\n        setTrainingResults(sanitizeResults(resultsRaw));\n      } catch (e) {\n        console.error(e);\n        setError('Failed to load dashboard data.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadAll();\n\n    // Poll every 2s while training\n    poll = setInterval(async () => {\n      try {\n        const st = await apiClient.getTrainingStatus();\n        setTrainingStatus(st);\n        if (st.isTraining) {\n          const res = await apiClient.getTrainingResults();\n          setTrainingResults(sanitizeResults(res));\n        }\n      } catch {\n        // silent\n      }\n    }, 2000);\n    return () => clearInterval(poll);\n  }, []);\n  const startTraining = async () => {\n    try {\n      setError(null);\n      await apiClient.startTraining({\n        episodes,\n        useBaseline: true,\n        baselineStrategy: 'combined'\n      });\n      const st = await apiClient.getTrainingStatus();\n      setTrainingStatus(st);\n    } catch (e) {\n      console.error(e);\n      setError('Failed to start training.');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center p-4\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"max-w-md w-full text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-2\",\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-4\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => window.location.reload(),\n          children: \"Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this);\n  }\n  const {\n    finalReward,\n    avgLast10,\n    improvementOverBaseline,\n    rewardHistory,\n    baselineHistory\n  } = trainingResults;\n  const progress = trainingStatus.isTraining && trainingStatus.totalEpisodes > 0 ? Math.round(trainingStatus.currentEpisode / trainingStatus.totalEpisodes * 100) : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Smart Dynamic Pricing Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto p-4 space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col md:flex-row md:items-center md:justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-lg font-semibold\",\n              children: \"AI Training\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), trainingStatus.isTraining ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600\",\n              children: [\"Episode \", trainingStatus.currentEpisode, \"/\", trainingStatus.totalEpisodes, \" (\", progress, \"%)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600\",\n              children: \"Not training\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 md:mt-0 flex items-center gap-2\",\n            children: !trainingStatus.isTraining && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: 10,\n                max: 1000,\n                value: episodes,\n                onChange: e => setEpisodes(Number(e.target.value)),\n                className: \"w-20 p-2 border rounded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: startTraining,\n                children: \"Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), trainingStatus.isTraining && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-2 w-full bg-gray-200 rounded mt-2 overflow-hidden\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-full bg-blue-600 transition-all\",\n            style: {\n              width: `${progress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this), trainingStatus.isTraining && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 sm:grid-cols-3 gap-4 mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(StatCard, {\n            title: \"Final Reward\",\n            value: finalReward.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n            title: \"Avg Last 10\",\n            value: avgLast10.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n            title: \"Improvement\",\n            value: `${improvementOverBaseline.toFixed(2)}%`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-2 gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          className: \"lg:col-span-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold mb-2\",\n            children: \"Revenue vs Baseline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RevenueVsBaselineChart, {\n            agentRewards: rewardHistory,\n            baselineRewards: baselineHistory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold mb-2\",\n            children: \"Price-Demand-Revenue (First Product)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PriceDemandRevenueChart, {\n            data: pdData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold mb-2\",\n            children: \"Customer Segments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomerSegmentPie, {\n            data: segments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold mb-2\",\n            children: \"Product Performance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ProductPerformanceChart, {\n            products: products.map(p => ({\n              name: p.name,\n              revenue: p.current_price * p.stock\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold mb-2\",\n            children: \"Time-Based Pricing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TimePricingChart, {\n            data: timeData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold mb-2\",\n            children: \"Customer Retention\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomerRetentionChart, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: \"lg:col-span-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold mb-2\",\n            children: \"Price Sensitivity Heatmap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PriceSensitivityHeatmap, {\n            products: products\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"8odqPniM8X9baYHHHsFrr2L1f8k=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Header","Card","StatCard","RevenueVsBaselineChart","PriceDemandRevenueChart","CustomerSegmentPie","ProductPerformanceChart","TimePricingChart","CustomerRetentionChart","PriceSensitivityHeatmap","Button","LoadingSpinner","apiClient","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","products","setProducts","segments","setSegments","pdData","setPdData","timeData","setTimeData","timeSlots","prices","trainingStatus","setTrainingStatus","isTraining","currentEpisode","totalEpisodes","trainingResults","setTrainingResults","finalReward","avgLast10","improvementOverBaseline","rewardHistory","baselineHistory","episodes","setEpisodes","loading","setLoading","error","setError","sanitizeResults","raw","Number","Array","isArray","map","v","poll","loadAll","prodsRaw","segRaw","pdRaw","tpRaw","statusRaw","resultsRaw","Promise","all","getProducts","getCustomerSegments","getPriceDemandData","getTimePricingData","getTrainingStatus","getTrainingResults","pie","s","name","percentage","size","pdList","length","first","points","pricePoints","p","i","_first$demand$i","_first$revenue$i","price","demand","revenue","tp","timeOfDay","priceMultipliers","e","console","setInterval","st","res","clearInterval","startTraining","useBaseline","baselineStrategy","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","reload","progress","Math","round","title","type","min","max","value","onChange","target","style","width","toFixed","agentRewards","baselineRewards","data","current_price","stock","_c","$RefreshReg$"],"sources":["C:/Users/laksh/Downloads/ffl/smart-dynamic-pricing-fixed/frontend/src/pages/Dashboard.tsx"],"sourcesContent":["// src/pages/Dashboard.tsx\nimport React, { useState, useEffect } from 'react'\nimport Header from '../components/Header'\nimport Card from '../components/Card'\nimport StatCard from '../components/StatCard'\nimport RevenueVsBaselineChart from '../components/RevenueVsBaselineChart'\nimport PriceDemandRevenueChart from '../components/PriceDemandRevenueChart'\nimport CustomerSegmentPie from '../components/CustomerSegmentPie'\nimport ProductPerformanceChart from '../components/ProductPerformanceChart'\nimport TimePricingChart from '../components/TimePricingChart'\nimport CustomerRetentionChart from '../components/CustomerRetentionChart'\nimport PriceSensitivityHeatmap from '../components/PriceSensitivityHeatmap'\nimport Button from '../components/Button'\nimport LoadingSpinner from '../components/LoadingSpinner'\nimport apiClient from '../api/apiClient'\n\ninterface TrainingStatus {\n  isTraining: boolean\n  currentEpisode: number\n  totalEpisodes: number\n}\n\ninterface TrainingResults {\n  finalReward: number\n  avgLast10: number\n  improvementOverBaseline: number\n  rewardHistory: number[]\n  baselineHistory: number[]\n}\n\ninterface Product {\n  id: number\n  name: string\n  base_price: number\n  cost: number\n  current_price: number\n  demand_elasticity: number\n  seasonality: number\n  quality: number\n  stock: number\n  category: string\n  recommendation?: string\n}\n\ninterface Segment {\n  name: string\n  percentage: number\n  color?: string\n}\n\ninterface PDResponseItem {\n  product: string\n  pricePoints: number[]\n  demand: number[]\n  revenue: number[]\n}\ninterface PDPoint {\n  price: number\n  demand: number\n  revenue: number\n}\n\ninterface TimePricingAPI {\n  timeOfDay: string[]\n  weekdays: string[]\n  priceMultipliers: number[]\n}\n\nconst Dashboard: React.FC = () => {\n  // State\n  const [products, setProducts] = useState<Product[]>([])\n  const [segments, setSegments] = useState<Segment[]>([])\n  const [pdData, setPdData] = useState<PDPoint[]>([])\n  const [timeData, setTimeData] = useState<{ timeSlots: string[]; prices: number[] }>({\n    timeSlots: [],\n    prices: []\n  })\n  const [trainingStatus, setTrainingStatus] = useState<TrainingStatus>({\n    isTraining: false,\n    currentEpisode: 0,\n    totalEpisodes: 0\n  })\n  const [trainingResults, setTrainingResults] = useState<TrainingResults>({\n    finalReward: 0,\n    avgLast10: 0,\n    improvementOverBaseline: 0,\n    rewardHistory: [],\n    baselineHistory: []\n  })\n  const [episodes, setEpisodes] = useState(100)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n\n  // Helper to sanitize training results\n  const sanitizeResults = (raw: any): TrainingResults => ({\n    finalReward: Number(raw?.finalReward) || 0,\n    avgLast10: Number(raw?.avgLast10) || 0,\n    improvementOverBaseline: Number(raw?.improvementOverBaseline) || 0,\n    rewardHistory: Array.isArray(raw?.rewardHistory)\n      ? raw.rewardHistory.map((v: any) => Number(v) || 0)\n      : [],\n    baselineHistory: Array.isArray(raw?.baselineHistory)\n      ? raw.baselineHistory.map((v: any) => Number(v) || 0)\n      : []\n  })\n\n  // Load everything once\n  useEffect(() => {\n    let poll: NodeJS.Timeout\n    const loadAll = async () => {\n      try {\n        setLoading(true)\n        setError(null)\n\n        const [\n          prodsRaw,\n          segRaw,\n          pdRaw,\n          tpRaw,\n          statusRaw,\n          resultsRaw\n        ] = await Promise.all([\n          apiClient.getProducts(),\n          apiClient.getCustomerSegments(),\n          apiClient.getPriceDemandData(),\n          apiClient.getTimePricingData(),\n          apiClient.getTrainingStatus(),\n          apiClient.getTrainingResults()\n        ])\n\n        // Products\n        setProducts(prodsRaw as Product[])\n\n        // Customer segments → pie\n        const pie: Segment[] = (segRaw as any[]).map(s => ({\n          name: s.name,\n          percentage: typeof s.size === 'number' ? s.size * 100 : 0\n        }))\n        setSegments(pie)\n\n        // Price–Demand–Revenue for first product\n        const pdList = pdRaw as PDResponseItem[]\n        if (pdList.length > 0) {\n          const first = pdList[0]\n          const points: PDPoint[] = first.pricePoints.map((p, i) => ({\n            price: p,\n            demand: first.demand[i] ?? 0,\n            revenue: first.revenue[i] ?? 0\n          }))\n          setPdData(points)\n        } else {\n          setPdData([])\n        }\n\n        // Time-based pricing\n        const tp = tpRaw as TimePricingAPI\n        setTimeData({ timeSlots: tp.timeOfDay, prices: tp.priceMultipliers })\n\n        // Training status & results\n        setTrainingStatus(statusRaw as TrainingStatus)\n        setTrainingResults(sanitizeResults(resultsRaw))\n      } catch (e) {\n        console.error(e)\n        setError('Failed to load dashboard data.')\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    loadAll()\n\n    // Poll every 2s while training\n    poll = setInterval(async () => {\n      try {\n        const st = await apiClient.getTrainingStatus()\n        setTrainingStatus(st)\n        if (st.isTraining) {\n          const res = await apiClient.getTrainingResults()\n          setTrainingResults(sanitizeResults(res))\n        }\n      } catch {\n        // silent\n      }\n    }, 2000)\n\n    return () => clearInterval(poll)\n  }, [])\n\n  const startTraining = async () => {\n    try {\n      setError(null)\n      await apiClient.startTraining({ episodes, useBaseline: true, baselineStrategy: 'combined' })\n      const st = await apiClient.getTrainingStatus()\n      setTrainingStatus(st)\n    } catch (e) {\n      console.error(e)\n      setError('Failed to start training.')\n    }\n  }\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <LoadingSpinner size=\"large\" />\n      </div>\n    )\n  }\n  if (error) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center p-4\">\n        <Card className=\"max-w-md w-full text-center\">\n          <h2 className=\"text-xl font-semibold mb-2\">Error</h2>\n          <p className=\"mb-4\">{error}</p>\n          <Button onClick={() => window.location.reload()}>Retry</Button>\n        </Card>\n      </div>\n    )\n  }\n\n  const {\n    finalReward,\n    avgLast10,\n    improvementOverBaseline,\n    rewardHistory,\n    baselineHistory\n  } = trainingResults\n\n  const progress =\n    trainingStatus.isTraining && trainingStatus.totalEpisodes > 0\n      ? Math.round((trainingStatus.currentEpisode / trainingStatus.totalEpisodes) * 100)\n      : 0\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header title=\"Smart Dynamic Pricing Dashboard\" />\n\n      <div className=\"container mx-auto p-4 space-y-6\">\n        {/* Training Controls */}\n        <Card>\n          <div className=\"flex flex-col md:flex-row md:items-center md:justify-between\">\n            <div>\n              <h2 className=\"text-lg font-semibold\">AI Training</h2>\n              {trainingStatus.isTraining ? (\n                <p className=\"text-sm text-gray-600\">\n                  Episode {trainingStatus.currentEpisode}/{trainingStatus.totalEpisodes} ({progress}\n                  %)\n                </p>\n              ) : (\n                <p className=\"text-sm text-gray-600\">Not training</p>\n              )}\n            </div>\n            <div className=\"mt-4 md:mt-0 flex items-center gap-2\">\n              {!trainingStatus.isTraining && (\n                <>\n                  <input\n                    type=\"number\"\n                    min={10}\n                    max={1000}\n                    value={episodes}\n                    onChange={e => setEpisodes(Number(e.target.value))}\n                    className=\"w-20 p-2 border rounded\"\n                  />\n                  <Button onClick={startTraining}>Start</Button>\n                </>\n              )}\n            </div>\n          </div>\n          {trainingStatus.isTraining && (\n            <div className=\"h-2 w-full bg-gray-200 rounded mt-2 overflow-hidden\">\n              <div\n                className=\"h-full bg-blue-600 transition-all\"\n                style={{ width: `${progress}%` }}\n              />\n            </div>\n          )}\n\n          {trainingStatus.isTraining && (\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4 mt-4\">\n              <StatCard title=\"Final Reward\" value={finalReward.toFixed(2)} />\n              <StatCard title=\"Avg Last 10\" value={avgLast10.toFixed(2)} />\n              <StatCard\n                title=\"Improvement\"\n                value={`${improvementOverBaseline.toFixed(2)}%`}\n              />\n            </div>\n          )}\n        </Card>\n\n        {/* Charts */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          <Card className=\"lg:col-span-2\">\n            <h3 className=\"text-lg font-semibold mb-2\">Revenue vs Baseline</h3>\n            <RevenueVsBaselineChart\n              agentRewards={rewardHistory}\n              baselineRewards={baselineHistory}\n            />\n          </Card>\n\n          <Card>\n            <h3 className=\"text-lg font-semibold mb-2\">\n              Price-Demand-Revenue (First Product)\n            </h3>\n            <PriceDemandRevenueChart data={pdData} />\n          </Card>\n\n          <Card>\n            <h3 className=\"text-lg font-semibold mb-2\">Customer Segments</h3>\n            <CustomerSegmentPie data={segments} />\n          </Card>\n\n          <Card>\n            <h3 className=\"text-lg font-semibold mb-2\">Product Performance</h3>\n            <ProductPerformanceChart\n              products={products.map(p => ({\n                name: p.name,\n                revenue: p.current_price * p.stock\n              }))}\n            />\n          </Card>\n\n          <Card>\n            <h3 className=\"text-lg font-semibold mb-2\">Time-Based Pricing</h3>\n            <TimePricingChart data={timeData} />\n          </Card>\n\n          <Card>\n            <h3 className=\"text-lg font-semibold mb-2\">Customer Retention</h3>\n            <CustomerRetentionChart />\n          </Card>\n\n          <Card className=\"lg:col-span-2\">\n            <h3 className=\"text-lg font-semibold mb-2\">Price Sensitivity Heatmap</h3>\n            <PriceSensitivityHeatmap products={products} />\n          </Card>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Dashboard\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}