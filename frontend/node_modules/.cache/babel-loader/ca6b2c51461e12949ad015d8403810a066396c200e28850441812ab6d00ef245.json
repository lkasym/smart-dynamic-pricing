{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laksh\\\\Downloads\\\\ffl\\\\smart-dynamic-pricing-fixed\\\\frontend\\\\src\\\\pages\\\\Dashboard.tsx\",\n  _s = $RefreshSig$();\n// src/pages/Dashboard.tsx\nimport React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport Card from '../components/Card';\nimport StatCard from '../components/StatCard';\nimport RevenueVsBaselineChart from '../components/RevenueVsBaselineChart';\nimport PriceDemandRevenueChart from '../components/PriceDemandRevenueChart';\nimport CustomerSegmentPie from '../components/CustomerSegmentPie';\nimport ProductPerformanceChart from '../components/ProductPerformanceChart';\nimport TimePricingChart from '../components/TimePricingChart';\nimport CustomerRetentionChart from '../components/CustomerRetentionChart';\nimport PriceSensitivityHeatmap from '../components/PriceSensitivityHeatmap';\nimport Button from '../components/Button';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport apiClient from '../api/apiClient';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  // state\n  const [products, setProducts] = useState([]);\n  const [pieData, setPieData] = useState([]);\n  const [pdData, setPdData] = useState([]);\n  const [timePricing, setTimePricing] = useState({\n    timeOfDay: [],\n    priceMultipliers: []\n  });\n  const [trainingStatus, setTrainingStatus] = useState({\n    isTraining: false,\n    currentEpisode: 0,\n    totalEpisodes: 0\n  });\n  const [trainingResults, setTrainingResults] = useState({\n    finalReward: 0,\n    avgLast10: 0,\n    improvementOverBaseline: 0,\n    rewardHistory: [],\n    baselineHistory: []\n  });\n  const [episodes, setEpisodes] = useState(100);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // helper to coerce backend results\n  const sanitize = raw => ({\n    finalReward: Number(raw === null || raw === void 0 ? void 0 : raw.finalReward) || 0,\n    avgLast10: Number(raw === null || raw === void 0 ? void 0 : raw.avgLast10) || 0,\n    improvementOverBaseline: Number(raw === null || raw === void 0 ? void 0 : raw.improvementOverBaseline) || 0,\n    rewardHistory: Array.isArray(raw === null || raw === void 0 ? void 0 : raw.rewardHistory) ? raw.rewardHistory.map(x => Number(x) || 0) : [],\n    baselineHistory: Array.isArray(raw === null || raw === void 0 ? void 0 : raw.baselineHistory) ? raw.baselineHistory.map(x => Number(x) || 0) : []\n  });\n\n  // initial load + polling\n  useEffect(() => {\n    let poll;\n    const loadAll = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const [prodRaw, segRaw, pdRaw, tpRaw, statusRaw, resultsRaw] = await Promise.all([apiClient.getProducts(), apiClient.getCustomerSegmentData(), apiClient.getPriceDemandData(), apiClient.getTimePricingData(), apiClient.getTrainingStatus(), apiClient.getTrainingResults()]);\n\n        // products (we keep full objects for heatmap)\n        setProducts(Array.isArray(prodRaw) ? prodRaw : []);\n\n        // pieData from segRaw.value\n        if (Array.isArray(segRaw)) {\n          setPieData(segRaw.map(s => ({\n            name: s.name,\n            percentage: Number(s.value) || 0\n          })));\n        }\n\n        // price-demand-revenue (first product only)\n        if (Array.isArray(pdRaw) && pdRaw.length > 0) {\n          const first = pdRaw[0];\n          setPdData(first.pricePoints.map((p, i) => ({\n            price: p,\n            demand: first.demand[i],\n            revenue: p * first.demand[i]\n          })));\n        }\n\n        // timePricing\n        setTimePricing({\n          timeOfDay: Array.isArray(tpRaw.timeOfDay) ? tpRaw.timeOfDay : [],\n          priceMultipliers: Array.isArray(tpRaw.priceMultipliers) ? tpRaw.priceMultipliers : []\n        });\n\n        // training\n        setTrainingStatus(statusRaw);\n        setTrainingResults(sanitize(resultsRaw));\n      } catch (err) {\n        console.error(err);\n        setError('Failed to load dashboard data.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadAll();\n    poll = setInterval(async () => {\n      try {\n        const statusRaw = await apiClient.getTrainingStatus();\n        setTrainingStatus(statusRaw);\n        if (statusRaw.isTraining) {\n          const resultsRaw = await apiClient.getTrainingResults();\n          setTrainingResults(sanitize(resultsRaw));\n        }\n      } catch {\n        /* ignore */\n      }\n    }, 2000);\n    return () => clearInterval(poll);\n  }, []);\n  const startTraining = async () => {\n    try {\n      setError(null);\n      await apiClient.startTraining({\n        episodes,\n        useBaseline: true,\n        baselineStrategy: 'combined'\n      });\n      const s = await apiClient.getTrainingStatus();\n      setTrainingStatus(s);\n    } catch {\n      setError('Failed to start training.');\n    }\n  };\n\n  // loading / error states\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gray-50\",\n    children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      size: \"large\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 7\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gray-50 p-4\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"max-w-md w-full text-center p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold\",\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-2\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => window.location.reload(),\n        variant: \"primary\",\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 7\n  }, this);\n\n  // destructure results\n  const {\n    finalReward,\n    avgLast10,\n    improvementOverBaseline,\n    rewardHistory,\n    baselineHistory\n  } = trainingResults;\n  const percent = trainingStatus.isTraining ? Math.round(trainingStatus.currentEpisode / trainingStatus.totalEpisodes * 100) : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Smart Dynamic Pricing Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 py-6 space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col md:flex-row md:items-center md:justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-lg font-semibold\",\n              children: \"AI Training\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600\",\n              children: trainingStatus.isTraining ? `Episode ${trainingStatus.currentEpisode} of ${trainingStatus.totalEpisodes} (${percent}%)` : 'Not training'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), !trainingStatus.isTraining && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 md:mt-0 flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: 10,\n              max: 1000,\n              value: episodes,\n              onChange: e => setEpisodes(Number(e.target.value)),\n              className: \"w-20 p-2 border rounded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: startTraining,\n              variant: \"primary\",\n              children: \"Start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), trainingStatus.isTraining && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 h-2 w-full bg-gray-200 rounded overflow-hidden\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"h-full bg-blue-600\",\n              style: {\n                width: `${percent}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 sm:grid-cols-3 gap-4 mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(StatCard, {\n              title: \"Final Reward\",\n              value: finalReward.toFixed(2),\n              trend: finalReward >= 0 ? 'up' : 'down',\n              trendValue: Math.abs(finalReward).toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n              title: \"Avg Last 10\",\n              value: avgLast10.toFixed(2),\n              trend: avgLast10 >= 0 ? 'up' : 'down',\n              trendValue: Math.abs(avgLast10).toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n              title: \"Improvement\",\n              value: `${improvementOverBaseline.toFixed(2)}%`,\n              trend: improvementOverBaseline >= 0 ? 'up' : 'down',\n              trendValue: `${Math.abs(improvementOverBaseline).toFixed(2)}%`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid gap-6 lg:grid-cols-2\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          className: \"lg:col-span-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold mb-2\",\n            children: \"Cumulative Revenue vs Baseline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RevenueVsBaselineChart, {\n            agentRewards: rewardHistory,\n            baselineRewards: baselineHistory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold mb-2\",\n            children: \"Price-Demand-Revenue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PriceDemandRevenueChart, {\n            data: pdData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold mb-2\",\n            children: \"Customer Segments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomerSegmentPie, {\n            data: pieData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold mb-2\",\n            children: \"Product Performance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ProductPerformanceChart, {\n            products: products.map(p => ({\n              name: p.name,\n              revenue: (p.base_price || 0) * (p.base_price || 0)\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold mb-2\",\n            children: \"Time-Based Optimal Prices\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TimePricingChart, {\n            data: timePricing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold mb-2\",\n            children: \"Retention over Episodes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomerRetentionChart, {\n            data: {\n              months: rewardHistory.map((_, i) => `Ep ${i + 1}`),\n              retention: rewardHistory\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: \"lg:col-span-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold mb-2\",\n            children: \"Price Sensitivity Heatmap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PriceSensitivityHeatmap, {\n            products: products\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"zaWjrzhG5SKKjsm0gxpmFJ6Y4J8=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Header","Card","StatCard","RevenueVsBaselineChart","PriceDemandRevenueChart","CustomerSegmentPie","ProductPerformanceChart","TimePricingChart","CustomerRetentionChart","PriceSensitivityHeatmap","Button","LoadingSpinner","apiClient","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","products","setProducts","pieData","setPieData","pdData","setPdData","timePricing","setTimePricing","timeOfDay","priceMultipliers","trainingStatus","setTrainingStatus","isTraining","currentEpisode","totalEpisodes","trainingResults","setTrainingResults","finalReward","avgLast10","improvementOverBaseline","rewardHistory","baselineHistory","episodes","setEpisodes","loading","setLoading","error","setError","sanitize","raw","Number","Array","isArray","map","x","poll","loadAll","prodRaw","segRaw","pdRaw","tpRaw","statusRaw","resultsRaw","Promise","all","getProducts","getCustomerSegmentData","getPriceDemandData","getTimePricingData","getTrainingStatus","getTrainingResults","s","name","percentage","value","length","first","pricePoints","p","i","price","demand","revenue","err","console","setInterval","clearInterval","startTraining","useBaseline","baselineStrategy","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","reload","variant","percent","Math","round","title","type","min","max","onChange","e","target","style","width","toFixed","trend","trendValue","abs","agentRewards","baselineRewards","data","base_price","months","_","retention","_c","$RefreshReg$"],"sources":["C:/Users/laksh/Downloads/ffl/smart-dynamic-pricing-fixed/frontend/src/pages/Dashboard.tsx"],"sourcesContent":["// src/pages/Dashboard.tsx\nimport React, { useState, useEffect } from 'react'\nimport Header from '../components/Header'\nimport Card from '../components/Card'\nimport StatCard from '../components/StatCard'\nimport RevenueVsBaselineChart from '../components/RevenueVsBaselineChart'\nimport PriceDemandRevenueChart from '../components/PriceDemandRevenueChart'\nimport CustomerSegmentPie from '../components/CustomerSegmentPie'\nimport ProductPerformanceChart from '../components/ProductPerformanceChart'\nimport TimePricingChart from '../components/TimePricingChart'\nimport CustomerRetentionChart from '../components/CustomerRetentionChart'\nimport PriceSensitivityHeatmap from '../components/PriceSensitivityHeatmap'\nimport Button from '../components/Button'\nimport LoadingSpinner from '../components/LoadingSpinner'\nimport apiClient from '../api/apiClient'\n\ninterface TrainingStatus {\n  isTraining: boolean\n  currentEpisode: number\n  totalEpisodes: number\n}\ninterface TrainingResults {\n  finalReward: number\n  avgLast10: number\n  improvementOverBaseline: number\n  rewardHistory: number[]\n  baselineHistory: number[]\n}\ninterface Segment { name: string; percentage: number }\ninterface ProductPerf { name?: string; revenue?: number }\ninterface HeatmapProduct { name: string; base_price?: number }\n\nconst Dashboard: React.FC = () => {\n  // state\n  const [products, setProducts] = useState<HeatmapProduct[]>([])\n  const [pieData, setPieData] = useState<Segment[]>([])\n  const [pdData, setPdData] = useState<{ price: number; demand: number; revenue: number }[]>([])\n  const [timePricing, setTimePricing] = useState<{ timeOfDay: string[]; priceMultipliers: number[] }>({\n    timeOfDay: [],\n    priceMultipliers: []\n  })\n  const [trainingStatus, setTrainingStatus] = useState<TrainingStatus>({\n    isTraining: false,\n    currentEpisode: 0,\n    totalEpisodes: 0\n  })\n  const [trainingResults, setTrainingResults] = useState<TrainingResults>({\n    finalReward: 0,\n    avgLast10: 0,\n    improvementOverBaseline: 0,\n    rewardHistory: [],\n    baselineHistory: []\n  })\n  const [episodes, setEpisodes] = useState(100)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n\n  // helper to coerce backend results\n  const sanitize = (raw: any): TrainingResults => ({\n    finalReward: Number(raw?.finalReward) || 0,\n    avgLast10: Number(raw?.avgLast10) || 0,\n    improvementOverBaseline: Number(raw?.improvementOverBaseline) || 0,\n    rewardHistory: Array.isArray(raw?.rewardHistory)\n      ? raw.rewardHistory.map((x: any) => Number(x) || 0)\n      : [],\n    baselineHistory: Array.isArray(raw?.baselineHistory)\n      ? raw.baselineHistory.map((x: any) => Number(x) || 0)\n      : []\n  })\n\n  // initial load + polling\n  useEffect(() => {\n    let poll: NodeJS.Timeout\n\n    const loadAll = async () => {\n      try {\n        setLoading(true)\n        setError(null)\n\n        const [\n          prodRaw,\n          segRaw,\n          pdRaw,\n          tpRaw,\n          statusRaw,\n          resultsRaw\n        ] = await Promise.all([\n          apiClient.getProducts(),\n          apiClient.getCustomerSegmentData(),\n          apiClient.getPriceDemandData(),\n          apiClient.getTimePricingData(),\n          apiClient.getTrainingStatus(),\n          apiClient.getTrainingResults()\n        ])\n\n        // products (we keep full objects for heatmap)\n        setProducts(Array.isArray(prodRaw) ? prodRaw : [])\n\n        // pieData from segRaw.value\n        if (Array.isArray(segRaw)) {\n          setPieData(\n            segRaw.map((s: any) => ({\n              name: s.name,\n              percentage: Number(s.value) || 0\n            }))\n          )\n        }\n\n        // price-demand-revenue (first product only)\n        if (Array.isArray(pdRaw) && pdRaw.length > 0) {\n          const first = pdRaw[0]\n          setPdData(\n            first.pricePoints.map((p: number, i: number) => ({\n              price: p,\n              demand: first.demand[i],\n              revenue: p * first.demand[i]\n            }))\n          )\n        }\n\n        // timePricing\n        setTimePricing({\n          timeOfDay: Array.isArray(tpRaw.timeOfDay) ? tpRaw.timeOfDay : [],\n          priceMultipliers: Array.isArray(tpRaw.priceMultipliers)\n            ? tpRaw.priceMultipliers\n            : []\n        })\n\n        // training\n        setTrainingStatus(statusRaw)\n        setTrainingResults(sanitize(resultsRaw))\n      } catch (err) {\n        console.error(err)\n        setError('Failed to load dashboard data.')\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    loadAll()\n\n    poll = setInterval(async () => {\n      try {\n        const statusRaw = await apiClient.getTrainingStatus()\n        setTrainingStatus(statusRaw)\n        if (statusRaw.isTraining) {\n          const resultsRaw = await apiClient.getTrainingResults()\n          setTrainingResults(sanitize(resultsRaw))\n        }\n      } catch {\n        /* ignore */\n      }\n    }, 2000)\n\n    return () => clearInterval(poll)\n  }, [])\n\n  const startTraining = async () => {\n    try {\n      setError(null)\n      await apiClient.startTraining({\n        episodes,\n        useBaseline: true,\n        baselineStrategy: 'combined'\n      })\n      const s = await apiClient.getTrainingStatus()\n      setTrainingStatus(s)\n    } catch {\n      setError('Failed to start training.')\n    }\n  }\n\n  // loading / error states\n  if (loading)\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <LoadingSpinner size=\"large\" />\n      </div>\n    )\n  if (error)\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 p-4\">\n        <Card className=\"max-w-md w-full text-center p-6\">\n          <h2 className=\"text-xl font-semibold\">Error</h2>\n          <p className=\"mt-2\">{error}</p>\n          <Button onClick={() => window.location.reload()} variant=\"primary\">\n            Retry\n          </Button>\n        </Card>\n      </div>\n    )\n\n  // destructure results\n  const {\n    finalReward,\n    avgLast10,\n    improvementOverBaseline,\n    rewardHistory,\n    baselineHistory\n  } = trainingResults\n  const percent = trainingStatus.isTraining\n    ? Math.round(\n        (trainingStatus.currentEpisode / trainingStatus.totalEpisodes) * 100\n      )\n    : 0\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header title=\"Smart Dynamic Pricing Dashboard\" />\n\n      <div className=\"container mx-auto px-4 py-6 space-y-6\">\n        {/* training */}\n        <Card>\n          <div className=\"flex flex-col md:flex-row md:items-center md:justify-between\">\n            <div>\n              <h2 className=\"text-lg font-semibold\">AI Training</h2>\n              <p className=\"text-sm text-gray-600\">\n                {trainingStatus.isTraining\n                  ? `Episode ${trainingStatus.currentEpisode} of ${trainingStatus.totalEpisodes} (${percent}%)`\n                  : 'Not training'}\n              </p>\n            </div>\n            {!trainingStatus.isTraining && (\n              <div className=\"mt-4 md:mt-0 flex items-center gap-2\">\n                <input\n                  type=\"number\"\n                  min={10}\n                  max={1000}\n                  value={episodes}\n                  onChange={(e) => setEpisodes(Number(e.target.value))}\n                  className=\"w-20 p-2 border rounded\"\n                />\n                <Button onClick={startTraining} variant=\"primary\">\n                  Start\n                </Button>\n              </div>\n            )}\n          </div>\n\n          {trainingStatus.isTraining && (\n            <>\n              <div className=\"mt-4 h-2 w-full bg-gray-200 rounded overflow-hidden\">\n                <div\n                  className=\"h-full bg-blue-600\"\n                  style={{ width: `${percent}%` }}\n                />\n              </div>\n              <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4 mt-4\">\n                <StatCard\n                  title=\"Final Reward\"\n                  value={finalReward.toFixed(2)}\n                  trend={finalReward >= 0 ? 'up' : 'down'}\n                  trendValue={Math.abs(finalReward).toFixed(2)}\n                />\n                <StatCard\n                  title=\"Avg Last 10\"\n                  value={avgLast10.toFixed(2)}\n                  trend={avgLast10 >= 0 ? 'up' : 'down'}\n                  trendValue={Math.abs(avgLast10).toFixed(2)}\n                />\n                <StatCard\n                  title=\"Improvement\"\n                  value={`${improvementOverBaseline.toFixed(2)}%`}\n                  trend={improvementOverBaseline >= 0 ? 'up' : 'down'}\n                  trendValue={`${Math.abs(improvementOverBaseline).toFixed(2)}%`}\n                />\n              </div>\n            </>\n          )}\n        </Card>\n\n        {/* charts grid */}\n        <div className=\"grid gap-6 lg:grid-cols-2\">\n          <Card className=\"lg:col-span-2\">\n            <h3 className=\"text-lg font-semibold mb-2\">\n              Cumulative Revenue vs Baseline\n            </h3>\n            <RevenueVsBaselineChart\n              agentRewards={rewardHistory}\n              baselineRewards={baselineHistory}\n            />\n          </Card>\n\n          <Card>\n            <h3 className=\"text-lg font-semibold mb-2\">\n              Price-Demand-Revenue\n            </h3>\n            <PriceDemandRevenueChart data={pdData} />\n          </Card>\n\n          <Card>\n            <h3 className=\"text-lg font-semibold mb-2\">\n              Customer Segments\n            </h3>\n            <CustomerSegmentPie data={pieData} />\n          </Card>\n\n          <Card>\n            <h3 className=\"text-lg font-semibold mb-2\">\n              Product Performance\n            </h3>\n            <ProductPerformanceChart\n              products={products.map((p) => ({\n                name: p.name,\n                revenue: (p.base_price || 0) * (p.base_price || 0)\n              }))}\n            />\n          </Card>\n\n          <Card>\n            <h3 className=\"text-lg font-semibold mb-2\">\n              Time-Based Optimal Prices\n            </h3>\n            <TimePricingChart data={timePricing} />\n          </Card>\n\n          <Card>\n            <h3 className=\"text-lg font-semibold mb-2\">\n              Retention over Episodes\n            </h3>\n            <CustomerRetentionChart\n              data={{\n                months: rewardHistory.map((_, i) => `Ep ${i + 1}`),\n                retention: rewardHistory\n              }}\n            />\n          </Card>\n\n          <Card className=\"lg:col-span-2\">\n            <h3 className=\"text-lg font-semibold mb-2\">\n              Price Sensitivity Heatmap\n            </h3>\n            <PriceSensitivityHeatmap products={products} />\n          </Card>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Dashboard\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}