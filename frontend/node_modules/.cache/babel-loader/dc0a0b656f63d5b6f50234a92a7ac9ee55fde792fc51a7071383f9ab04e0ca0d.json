{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laksh\\\\Downloads\\\\ffl\\\\smart-dynamic-pricing-fixed\\\\frontend\\\\src\\\\pages\\\\Dashboard.tsx\",\n  _s = $RefreshSig$();\n// src/pages/Dashboard.tsx\nimport React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport Card from '../components/Card';\nimport StatCard from '../components/StatCard';\nimport RevenueVsBaselineChart from '../components/RevenueVsBaselineChart';\nimport PriceDemandRevenueChart from '../components/PriceDemandRevenueChart';\nimport CustomerSegmentPie from '../components/CustomerSegmentPie';\nimport ProductPerformanceChart from '../components/ProductPerformanceChart';\nimport TimePricingChart from '../components/TimePricingChart';\nimport CustomerRetentionChart from '../components/CustomerRetentionChart';\nimport PriceSensitivityHeatmap from '../components/PriceSensitivityHeatmap';\nimport Button from '../components/Button';\nimport apiClient from '../api/apiClient';\n\n//–– Types for local state ––\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  //–– state hooks ––\n  const [products, setProducts] = useState([]);\n  const [segments, setSegments] = useState([]);\n  const [pdRaw, setPdRaw] = useState([]);\n  const [pdData, setPdData] = useState([]);\n  const [timeData, setTimeData] = useState({\n    timeOfDay: [],\n    priceMultipliers: []\n  });\n  const [trainingStatus, setTrainingStatus] = useState({\n    isTraining: false,\n    currentEpisode: 0,\n    totalEpisodes: 0\n  });\n  const [trainingResults, setTrainingResults] = useState({\n    finalReward: 0,\n    avgLast10: 0,\n    improvementOverBaseline: 0,\n    rewardHistory: [],\n    baselineHistory: []\n  });\n  const [episodesToRun, setEpisodesToRun] = useState(100);\n\n  //–– load everything on mount ––\n  useEffect(() => {\n    async function loadAll() {\n      try {\n        const [prods, segsRaw, priceDemandRaw, timeRaw, statusRaw, resultsRaw] = await Promise.all([apiClient.getProducts(), apiClient.getCustomerSegments(), apiClient.getPriceDemandData(), apiClient.getTimePricingData(), apiClient.getTrainingStatus(), apiClient.getTrainingResults()]);\n\n        // products\n        setProducts(prods);\n\n        // segments → percentage\n        setSegments(segsRaw.map(s => ({\n          name: s.name,\n          percentage: (typeof s.size === 'number' ? s.size : 0) * 100\n        })));\n\n        // price–demand–revenue raw\n        setPdRaw(priceDemandRaw);\n\n        // flatten first product into pdData\n        if (priceDemandRaw.length > 0) {\n          const first = priceDemandRaw[0];\n          setPdData(first.pricePoints.map((p, i) => ({\n            price: p,\n            demand: first.demand[i],\n            revenue: first.revenue[i]\n          })));\n        }\n\n        // time‐pricing\n        setTimeData({\n          timeOfDay: timeRaw.timeOfDay,\n          priceMultipliers: timeRaw.priceMultipliers\n        });\n\n        // training status & results\n        setTrainingStatus(statusRaw);\n        setTrainingResults({\n          finalReward: Number(resultsRaw.finalReward) || 0,\n          avgLast10: Number(resultsRaw.avgLast10) || 0,\n          improvementOverBaseline: Number(resultsRaw.improvementOverBaseline) || 0,\n          rewardHistory: Array.isArray(resultsRaw.rewardHistory) ? resultsRaw.rewardHistory.map(v => Number(v) || 0) : [],\n          baselineHistory: Array.isArray(resultsRaw.baselineHistory) ? resultsRaw.baselineHistory.map(v => Number(v) || 0) : []\n        });\n      } catch (e) {\n        console.error('Error loading dashboard data:', e);\n      }\n    }\n    loadAll();\n  }, []);\n\n  //–– poll training status every 2s when training ––\n  useEffect(() => {\n    if (!trainingStatus.isTraining) return;\n    const iv = setInterval(async () => {\n      const statusRaw = await apiClient.getTrainingStatus();\n      setTrainingStatus(statusRaw);\n      if (statusRaw.isTraining) {\n        const resultsRaw = await apiClient.getTrainingResults();\n        setTrainingResults(r => ({\n          ...r,\n          finalReward: Number(resultsRaw.finalReward) || 0,\n          avgLast10: Number(resultsRaw.avgLast10) || 0,\n          improvementOverBaseline: Number(resultsRaw.improvementOverBaseline) || 0,\n          rewardHistory: Array.isArray(resultsRaw.rewardHistory) ? resultsRaw.rewardHistory.map(v => Number(v) || 0) : [],\n          baselineHistory: Array.isArray(resultsRaw.baselineHistory) ? resultsRaw.baselineHistory.map(v => Number(v) || 0) : []\n        }));\n      }\n    }, 2000);\n    return () => clearInterval(iv);\n  }, [trainingStatus.isTraining]);\n\n  //–– start training handler ––\n  const handleStart = async () => {\n    await apiClient.startTraining({\n      episodes: episodesToRun,\n      useBaseline: true,\n      baselineStrategy: 'combined'\n    });\n    const statusRaw = await apiClient.getTrainingStatus();\n    setTrainingStatus(statusRaw);\n  };\n  const {\n    finalReward,\n    avgLast10,\n    improvementOverBaseline,\n    rewardHistory,\n    baselineHistory\n  } = trainingResults;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Smart Dynamic Pricing Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto p-4 space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col md:flex-row md:items-center md:justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-lg font-semibold\",\n              children: \"AI Training\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), trainingStatus.isTraining ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600\",\n              children: [\"Episode \", trainingStatus.currentEpisode, \" /\", ' ', trainingStatus.totalEpisodes]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600\",\n              children: \"Not training\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 md:mt-0 flex items-center space-x-2\",\n            children: !trainingStatus.isTraining && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: 10,\n                max: 1000,\n                value: episodesToRun,\n                onChange: e => setEpisodesToRun(+e.target.value),\n                className: \"border px-2 py-1 rounded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleStart,\n                variant: \"primary\",\n                children: \"Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), trainingStatus.isTraining && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full h-2 bg-gray-200 rounded mt-3 overflow-hidden\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-full bg-blue-600 transition-all\",\n            style: {\n              width: `${trainingStatus.currentEpisode / trainingStatus.totalEpisodes * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), trainingStatus.isTraining && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 sm:grid-cols-3 gap-4 mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(StatCard, {\n            title: \"Final Reward\",\n            value: finalReward.toFixed(2),\n            trend: finalReward >= 0 ? 'up' : 'down',\n            trendValue: Math.abs(finalReward).toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n            title: \"Avg Last 10\",\n            value: avgLast10.toFixed(2),\n            trend: avgLast10 >= 0 ? 'up' : 'down',\n            trendValue: Math.abs(avgLast10).toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n            title: \"Improvement %\",\n            value: `${improvementOverBaseline.toFixed(2)}%`,\n            trend: improvementOverBaseline >= 0 ? 'up' : 'down',\n            trendValue: `${Math.abs(improvementOverBaseline).toFixed(2)}%`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold mb-2\",\n          children: \"Revenue vs Baseline (Cumulative)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RevenueVsBaselineChart, {\n          agentRewards: rewardHistory,\n          baselineRewards: baselineHistory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-2 gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold mb-2\",\n            children: \"Price\\u2013Demand\\u2013Revenue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PriceDemandRevenueChart, {\n            data: pdData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold mb-2\",\n            children: \"Customer Segments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomerSegmentPie, {\n            data: segments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold mb-2\",\n            children: \"Projected Revenue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ProductPerformanceChart, {\n            products: products\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold mb-2\",\n            children: \"Time-Based Pricing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TimePricingChart, {\n            data: timeData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: \"lg:col-span-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold mb-2\",\n            children: \"Customer Retention\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomerRetentionChart, {\n            data: {\n              months: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\n              retention: [95, 92, 88, 90, 93, 95]\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: \"lg:col-span-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold mb-2\",\n            children: \"Price Sensitivity Heatmap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PriceSensitivityHeatmap, {\n            data: pdRaw\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"8sVxw0hphHMmHaypG3v6SlMyXKM=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Header","Card","StatCard","RevenueVsBaselineChart","PriceDemandRevenueChart","CustomerSegmentPie","ProductPerformanceChart","TimePricingChart","CustomerRetentionChart","PriceSensitivityHeatmap","Button","apiClient","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","products","setProducts","segments","setSegments","pdRaw","setPdRaw","pdData","setPdData","timeData","setTimeData","timeOfDay","priceMultipliers","trainingStatus","setTrainingStatus","isTraining","currentEpisode","totalEpisodes","trainingResults","setTrainingResults","finalReward","avgLast10","improvementOverBaseline","rewardHistory","baselineHistory","episodesToRun","setEpisodesToRun","loadAll","prods","segsRaw","priceDemandRaw","timeRaw","statusRaw","resultsRaw","Promise","all","getProducts","getCustomerSegments","getPriceDemandData","getTimePricingData","getTrainingStatus","getTrainingResults","map","s","name","percentage","size","length","first","pricePoints","p","i","price","demand","revenue","Number","Array","isArray","v","e","console","error","iv","setInterval","r","clearInterval","handleStart","startTraining","episodes","useBaseline","baselineStrategy","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","type","min","max","value","onChange","target","onClick","variant","style","width","toFixed","trend","trendValue","Math","abs","agentRewards","baselineRewards","data","months","retention","_c","$RefreshReg$"],"sources":["C:/Users/laksh/Downloads/ffl/smart-dynamic-pricing-fixed/frontend/src/pages/Dashboard.tsx"],"sourcesContent":["// src/pages/Dashboard.tsx\nimport React, { useState, useEffect } from 'react'\nimport Header from '../components/Header'\nimport Card from '../components/Card'\nimport StatCard from '../components/StatCard'\nimport RevenueVsBaselineChart from '../components/RevenueVsBaselineChart'\nimport PriceDemandRevenueChart from '../components/PriceDemandRevenueChart'\nimport CustomerSegmentPie from '../components/CustomerSegmentPie'\nimport ProductPerformanceChart from '../components/ProductPerformanceChart'\nimport TimePricingChart from '../components/TimePricingChart'\nimport CustomerRetentionChart from '../components/CustomerRetentionChart'\nimport PriceSensitivityHeatmap from '../components/PriceSensitivityHeatmap'\nimport Button from '../components/Button'\nimport apiClient from '../api/apiClient'\n\n//–– Types for local state ––\ninterface TrainingStatus {\n  isTraining: boolean\n  currentEpisode: number\n  totalEpisodes: number\n}\ninterface TrainingResults {\n  finalReward: number\n  avgLast10: number\n  improvementOverBaseline: number\n  rewardHistory: number[]\n  baselineHistory: number[]\n}\ninterface Product {\n  name: string\n  current_price: number\n  stock: number\n}\ninterface Segment {\n  name: string\n  percentage: number\n}\ninterface PdDatum {\n  price: number\n  demand: number\n  revenue: number\n}\ninterface TimeData {\n  timeOfDay: string[]\n  priceMultipliers: number[]\n}\ninterface HeatmapDatum {\n  product: string\n  pricePoints: number[]\n  demand: number[]\n}\n\nconst Dashboard: React.FC = () => {\n  //–– state hooks ––\n  const [products, setProducts] = useState<Product[]>([])\n  const [segments, setSegments] = useState<Segment[]>([])\n  const [pdRaw, setPdRaw] = useState<HeatmapDatum[]>([])\n  const [pdData, setPdData] = useState<PdDatum[]>([])\n  const [timeData, setTimeData] = useState<TimeData>({\n    timeOfDay: [],\n    priceMultipliers: []\n  })\n  const [trainingStatus, setTrainingStatus] = useState<TrainingStatus>({\n    isTraining: false,\n    currentEpisode: 0,\n    totalEpisodes: 0\n  })\n  const [trainingResults, setTrainingResults] = useState<TrainingResults>({\n    finalReward: 0,\n    avgLast10: 0,\n    improvementOverBaseline: 0,\n    rewardHistory: [],\n    baselineHistory: []\n  })\n  const [episodesToRun, setEpisodesToRun] = useState<number>(100)\n\n  //–– load everything on mount ––\n  useEffect(() => {\n    async function loadAll() {\n      try {\n        const [\n          prods,\n          segsRaw,\n          priceDemandRaw,\n          timeRaw,\n          statusRaw,\n          resultsRaw\n        ] = await Promise.all([\n          apiClient.getProducts(),\n          apiClient.getCustomerSegments(),\n          apiClient.getPriceDemandData(),\n          apiClient.getTimePricingData(),\n          apiClient.getTrainingStatus(),\n          apiClient.getTrainingResults()\n        ])\n\n        // products\n        setProducts(prods)\n\n        // segments → percentage\n        setSegments(\n          segsRaw.map((s: any) => ({\n            name: s.name,\n            percentage: (typeof s.size === 'number' ? s.size : 0) * 100\n          }))\n        )\n\n        // price–demand–revenue raw\n        setPdRaw(priceDemandRaw)\n\n        // flatten first product into pdData\n        if (priceDemandRaw.length > 0) {\n          const first = priceDemandRaw[0]\n          setPdData(\n            first.pricePoints.map((p: number, i: number) => ({\n              price: p,\n              demand: first.demand[i],\n              revenue: first.revenue[i]\n            }))\n          )\n        }\n\n        // time‐pricing\n        setTimeData({\n          timeOfDay: timeRaw.timeOfDay,\n          priceMultipliers: timeRaw.priceMultipliers\n        })\n\n        // training status & results\n        setTrainingStatus(statusRaw)\n        setTrainingResults({\n          finalReward: Number(resultsRaw.finalReward) || 0,\n          avgLast10: Number(resultsRaw.avgLast10) || 0,\n          improvementOverBaseline:\n            Number(resultsRaw.improvementOverBaseline) || 0,\n          rewardHistory: Array.isArray(resultsRaw.rewardHistory)\n            ? resultsRaw.rewardHistory.map((v: any) => Number(v) || 0)\n            : [],\n          baselineHistory: Array.isArray(resultsRaw.baselineHistory)\n            ? resultsRaw.baselineHistory.map((v: any) => Number(v) || 0)\n            : []\n        })\n      } catch (e) {\n        console.error('Error loading dashboard data:', e)\n      }\n    }\n    loadAll()\n  }, [])\n\n  //–– poll training status every 2s when training ––\n  useEffect(() => {\n    if (!trainingStatus.isTraining) return\n    const iv = setInterval(async () => {\n      const statusRaw = await apiClient.getTrainingStatus()\n      setTrainingStatus(statusRaw)\n      if (statusRaw.isTraining) {\n        const resultsRaw = await apiClient.getTrainingResults()\n        setTrainingResults((r) => ({\n          ...r,\n          finalReward: Number(resultsRaw.finalReward) || 0,\n          avgLast10: Number(resultsRaw.avgLast10) || 0,\n          improvementOverBaseline:\n            Number(resultsRaw.improvementOverBaseline) || 0,\n          rewardHistory: Array.isArray(resultsRaw.rewardHistory)\n            ? resultsRaw.rewardHistory.map((v: any) => Number(v) || 0)\n            : [],\n          baselineHistory: Array.isArray(resultsRaw.baselineHistory)\n            ? resultsRaw.baselineHistory.map((v: any) => Number(v) || 0)\n            : []\n        }))\n      }\n    }, 2000)\n    return () => clearInterval(iv)\n  }, [trainingStatus.isTraining])\n\n  //–– start training handler ––\n  const handleStart = async () => {\n    await apiClient.startTraining({\n      episodes: episodesToRun,\n      useBaseline: true,\n      baselineStrategy: 'combined'\n    })\n    const statusRaw = await apiClient.getTrainingStatus()\n    setTrainingStatus(statusRaw)\n  }\n\n  const {\n    finalReward,\n    avgLast10,\n    improvementOverBaseline,\n    rewardHistory,\n    baselineHistory\n  } = trainingResults\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header title=\"Smart Dynamic Pricing Dashboard\" />\n\n      <div className=\"container mx-auto p-4 space-y-6\">\n        {/* AI Training Control */}\n        <Card>\n          <div className=\"flex flex-col md:flex-row md:items-center md:justify-between\">\n            <div>\n              <h2 className=\"text-lg font-semibold\">AI Training</h2>\n              {trainingStatus.isTraining ? (\n                <p className=\"text-sm text-gray-600\">\n                  Episode {trainingStatus.currentEpisode} /{' '}\n                  {trainingStatus.totalEpisodes}\n                </p>\n              ) : (\n                <p className=\"text-sm text-gray-600\">Not training</p>\n              )}\n            </div>\n            <div className=\"mt-4 md:mt-0 flex items-center space-x-2\">\n              {!trainingStatus.isTraining && (\n                <>\n                  <input\n                    type=\"number\"\n                    min={10}\n                    max={1000}\n                    value={episodesToRun}\n                    onChange={(e) => setEpisodesToRun(+e.target.value)}\n                    className=\"border px-2 py-1 rounded\"\n                  />\n                  <Button onClick={handleStart} variant=\"primary\">\n                    Start\n                  </Button>\n                </>\n              )}\n            </div>\n          </div>\n\n          {trainingStatus.isTraining && (\n            <div className=\"w-full h-2 bg-gray-200 rounded mt-3 overflow-hidden\">\n              <div\n                className=\"h-full bg-blue-600 transition-all\"\n                style={{\n                  width: `${\n                    (trainingStatus.currentEpisode /\n                      trainingStatus.totalEpisodes) *\n                    100\n                  }%`\n                }}\n              />\n            </div>\n          )}\n\n          {trainingStatus.isTraining && (\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4 mt-4\">\n              <StatCard\n                title=\"Final Reward\"\n                value={finalReward.toFixed(2)}\n                trend={finalReward >= 0 ? 'up' : 'down'}\n                trendValue={Math.abs(finalReward).toFixed(2)}\n              />\n              <StatCard\n                title=\"Avg Last 10\"\n                value={avgLast10.toFixed(2)}\n                trend={avgLast10 >= 0 ? 'up' : 'down'}\n                trendValue={Math.abs(avgLast10).toFixed(2)}\n              />\n              <StatCard\n                title=\"Improvement %\"\n                value={`${improvementOverBaseline.toFixed(2)}%`}\n                trend={improvementOverBaseline >= 0 ? 'up' : 'down'}\n                trendValue={`${Math.abs(\n                  improvementOverBaseline\n                ).toFixed(2)}%`}\n              />\n            </div>\n          )}\n        </Card>\n\n        {/* Charts */}\n        <Card>\n          <h3 className=\"text-lg font-semibold mb-2\">\n            Revenue vs Baseline (Cumulative)\n          </h3>\n          <RevenueVsBaselineChart\n            agentRewards={rewardHistory}\n            baselineRewards={baselineHistory}\n          />\n        </Card>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          <Card>\n            <h3 className=\"text-lg font-semibold mb-2\">\n              Price–Demand–Revenue\n            </h3>\n            <PriceDemandRevenueChart data={pdData} />\n          </Card>\n\n          <Card>\n            <h3 className=\"text-lg font-semibold mb-2\">\n              Customer Segments\n            </h3>\n            <CustomerSegmentPie data={segments} />\n          </Card>\n\n          <Card>\n            <h3 className=\"text-lg font-semibold mb-2\">\n              Projected Revenue\n            </h3>\n            <ProductPerformanceChart products={products} />\n          </Card>\n\n          <Card>\n            <h3 className=\"text-lg font-semibold mb-2\">\n              Time-Based Pricing\n            </h3>\n            <TimePricingChart data={timeData} />\n          </Card>\n\n          <Card className=\"lg:col-span-2\">\n            <h3 className=\"text-lg font-semibold mb-2\">\n              Customer Retention\n            </h3>\n            <CustomerRetentionChart\n              data={{\n                months: ['Jan','Feb','Mar','Apr','May','Jun'],\n                retention: [95,92,88,90,93,95]\n              }}\n            />\n          </Card>\n\n          <Card className=\"lg:col-span-2\">\n            <h3 className=\"text-lg font-semibold mb-2\">\n              Price Sensitivity Heatmap\n            </h3>\n            <PriceSensitivityHeatmap data={pdRaw} />\n          </Card>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Dashboard\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}