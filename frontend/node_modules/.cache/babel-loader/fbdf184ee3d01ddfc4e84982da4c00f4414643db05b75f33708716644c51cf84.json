{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laksh\\\\Downloads\\\\ffl\\\\smart-dynamic-pricing-fixed\\\\frontend\\\\src\\\\components\\\\LoadingSpinner.tsx\";\n// src/components/LoadingSpinner.tsx\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sizeClasses = {\n  small: 'w-4 h-4',\n  medium: 'w-8 h-8',\n  large: 'w-12 h-12'\n};\nconst LoadingSpinner = ({\n  size = 'medium',\n  color = 'blue-600',\n  className = ''\n}) => {\n  var _sizeClasses$size;\n  const spinnerSize = (_sizeClasses$size = sizeClasses[size]) !== null && _sizeClasses$size !== void 0 ? _sizeClasses$size : sizeClasses.medium;\n  // turn \"blue-600\" into \"border-blue-600\"\n  const borderColorClass = color.startsWith('border-') ? color : `border-${color}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex justify-center items-center ${className}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `\n          ${spinnerSize}\n          animate-spin\n          rounded-full\n          border-4\n          border-solid\n          ${borderColorClass}\n          border-t-transparent\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c = LoadingSpinner;\nexport default LoadingSpinner;\nvar _c;\n$RefreshReg$(_c, \"LoadingSpinner\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","sizeClasses","small","medium","large","LoadingSpinner","size","color","className","_sizeClasses$size","spinnerSize","borderColorClass","startsWith","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/laksh/Downloads/ffl/smart-dynamic-pricing-fixed/frontend/src/components/LoadingSpinner.tsx"],"sourcesContent":["// src/components/LoadingSpinner.tsx\n\nimport React from 'react';\n\nexport interface LoadingSpinnerProps {\n  /** one of small|medium|large */\n  size?: 'small' | 'medium' | 'large';\n  /** Tailwind color suffix, e.g. \"blue-600\", \"red-500\" */\n  color?: string;\n  /** Extra classes you want to pass, e.g. \"mr-2\" */\n  className?: string;\n}\n\nconst sizeClasses: Record<LoadingSpinnerProps['size'], string> = {\n  small: 'w-4 h-4',\n  medium: 'w-8 h-8',\n  large: 'w-12 h-12',\n};\n\nconst LoadingSpinner: React.FC<LoadingSpinnerProps> = ({\n  size = 'medium',\n  color = 'blue-600',\n  className = '',\n}) => {\n  const spinnerSize = sizeClasses[size] ?? sizeClasses.medium;\n  // turn \"blue-600\" into \"border-blue-600\"\n  const borderColorClass = color.startsWith('border-') ? color : `border-${color}`;\n\n  return (\n    <div className={`flex justify-center items-center ${className}`}>\n      <div\n        className={`\n          ${spinnerSize}\n          animate-spin\n          rounded-full\n          border-4\n          border-solid\n          ${borderColorClass}\n          border-t-transparent\n        `}\n      />\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAW1B,MAAMC,WAAwD,GAAG;EAC/DC,KAAK,EAAE,SAAS;EAChBC,MAAM,EAAE,SAAS;EACjBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,cAA6C,GAAGA,CAAC;EACrDC,IAAI,GAAG,QAAQ;EACfC,KAAK,GAAG,UAAU;EAClBC,SAAS,GAAG;AACd,CAAC,KAAK;EAAA,IAAAC,iBAAA;EACJ,MAAMC,WAAW,IAAAD,iBAAA,GAAGR,WAAW,CAACK,IAAI,CAAC,cAAAG,iBAAA,cAAAA,iBAAA,GAAIR,WAAW,CAACE,MAAM;EAC3D;EACA,MAAMQ,gBAAgB,GAAGJ,KAAK,CAACK,UAAU,CAAC,SAAS,CAAC,GAAGL,KAAK,GAAG,UAAUA,KAAK,EAAE;EAEhF,oBACEP,OAAA;IAAKQ,SAAS,EAAE,oCAAoCA,SAAS,EAAG;IAAAK,QAAA,eAC9Db,OAAA;MACEQ,SAAS,EAAE;AACnB,YAAYE,WAAW;AACvB;AACA;AACA;AACA;AACA,YAAYC,gBAAgB;AAC5B;AACA;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAxBIb,cAA6C;AA0BnD,eAAeA,cAAc;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}